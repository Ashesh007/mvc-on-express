{
  "name": "express-theme",
  "version": "0.0.5",
  "description": "express-theme is express.js middleware that aims to create structured and simple theme very easily",
  "main": "theme.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/raitucarp/express-theme.git"
  },
  "keywords": [
    "theme",
    "express",
    "ui",
    "ux"
  ],
  "author": {
    "name": "Ribhararnus Pracutiar"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/raitucarp/express-theme/issues"
  },
  "dependencies": {},
  "readme": "Introduction Express-Theme\r\n=============\r\n\r\n**express-theme** is express.js middleware that aims to create structured and simple theme very easily. In the future, I will create market for express-themes. All people can upload their themes to the market, and developer-user can install easily for their projects.\r\n\r\n# Install #\r\n\r\n\tnpm install express-theme\r\n\r\n# Usage #\r\n\r\n#### First we should load express-theme module in app.js: ####\r\n\r\n\tvar theme = require('express-theme');\r\n\r\n#### Put middleware in app.configure before app.router: ####\r\n\r\n\tapp.configure(function () {\r\n\t\t// ...\r\n\t\tapp.use(theme('v1')); // v1 is theme name, see details below\r\n\t\tapp.use(app.router);\r\n\t\tapp.use(express.static(path.join(__dirname, 'public')));\r\n    \tapp.use(theme.error(routes.errorHandler)); // handle error\r\n\t\tapp.use(theme.notFound(routes.notFound));  // 404 not found\r\n\t});\r\n\r\n#### Create themes dir under your views: ####\r\n\r\n\tapp/\r\n\t   /views/\r\n\t   \t\t/themes/\r\n\t   \t\t/themes/v1\r\n\t   \t\t/themes/v2\r\n\t   \t\t/themes/name\r\n\r\nAs you can see, your themes should in themes directory, and create your themes there. v1, v2, above is name of your themes.\r\n\r\nFrom now in this documentation, I use v1 as example theme, ejs as default engine and extension of views.\r\n\r\n#### Create five main files: ####\r\n\r\n\t/themes/v1/500.ejs\r\n\t\t\t  /404.ejs\r\n\t\t\t  /index.ejs (this is optional actually)\r\n\t\t\t  /package.js\r\n\t\t\t  /screenshot.png\r\n\r\nWhat is that files purposes?\r\n\r\n- **505.ejs** is error handling, maybe your code error and for production you may not want print something ugly rather than your beautiful theme\r\n- **404.ejs** is handle 404 not found, when user mistype url on your site, default express produce ugly not found page. So it's now your chance to beautify your not found page\r\n- **index.ejs**, actually this is default file, it is optional. You can create your header.ejs or footer.ejs, and page.ejs as you want.\r\n- **screenshot.png** is future use, this file is for my upcoming projects. express-theme marketplace. \r\n- **package.json** is your theme description. this is also future use, but it is required file, not optional.\r\n\r\n#### What is inside package.json? ####\r\n\r\n\t{\r\n\t\t\"name\": \"v1\",\r\n\t\t\"author\" : \"Ribhararnus Pracutiar\",\r\n\t\t\"description\": \"Default theme\"\r\n\t}\r\n\r\n- name: your theme name\r\n- author: your name\r\n- description: description of your theme\r\n\r\n#### Now, it's time to move on to router ####\r\n\r\nI use index.js as example:\r\n\r\n\texports.index = function(req, res) {\r\n\t\tvar theme = res.theme;\r\n\t\ttheme.title('my title')\r\n\t\t\t .meta('description', 'your site description')\r\n\t\t\t .meta('keywords', 'your site keywords')\r\n\t\t\t .css('style, bootstrap')\r\n\t\t\t .js('jquery.min, bootstrap.min')\r\n\t\t\t .robots('googlebot', { noodp: 1, index: 1, follow: 0} )\r\n\t\t\t .opengraph('title', 'the rock')\r\n\t\t\t .twitter_cards('summary', {\r\n\t\t\t\tsite: '@yoursite',\r\n\t\t\t\tcreator: '@username',\r\n\t\t\t\ttitle: 'your site title',\r\n\t\t\t\tdescription: 'your site description' \r\n\t\t\t })\r\n\t\t\t .headerScript('<script>console.log(a)</script>')\r\n\t\t\t .footerScript('<script>console.log(b)</script>')\r\n\t\t\t .data('test', 'absolutely beautiful')\r\n\t\t\t .load('index'); // index is file under your theme dir\r\n\t};\r\n\r\nIn ***views/themes/v1/index.ejs***:\r\n\r\n\t<!DOCTYPE html>\r\n\t<html <%-og_namespace%>>\r\n\t  <head>\r\n\t    <title><%= title %></title>\r\n\t    <%- meta -%>\r\n\t    <%- stylesheet -%>\r\n\t    <%- javascript %>\r\n\t    <%- headerScript %>\r\n\t  </head>\r\n\t  <body>\r\n\t    <h1><%= title %></h1>\r\n\t    <p>Welcome to <%= title %>, <%= test %></p>\r\n\t    <%- footerScript %>\r\n\t  </body>\r\n\t</html>\r\n\r\n```<%- meta ->```, ```<%- stylesheet %>```, ```<%- javascript %>```,```<%- title %>``` is required variable.\r\n\r\n\r\nIt will render:\r\n\r\n\t<!DOCTYPE html>\r\n\t<html prefix=\"og: http://ogp.me/ns/article#\">\r\n\t  <head>\r\n\t    <title>my title</title>\r\n\t    <meta name=\"description\" content=\"your site description\" />\r\n\t<meta name=\"keywords\" content=\"your site keywords\" />\r\n\t<meta name=\"googlebot\" content=\"index, nofollow, noodp\" />\r\n\t<meta property=\"og:title\" content=\"the rock\" />\r\n\t<meta name=\"twitter:card\" content=\"summary\" />\r\n\t<meta name=\"twitter:site\" content=\"@yoursite\" />\r\n\t<meta name=\"twitter:creator\" content=\"@username\" />\r\n\t<meta name=\"twitter:title\" content=\"your site title\" />\r\n\t<meta name=\"twitter:description\" content=\"your site description\" />\r\n\t    <link rel=\"stylesheet\" href=\"/v1/css/style.css\" />\r\n\t<link rel=\"stylesheet\" href=\"/v1/css/bootstrap.css\" />\r\n\t    <script href=\"/v1/js/jquery.min.js\"></script>\r\n\t<script href=\"/v1/js/bootstrap.min.js\"></script>\r\n\t\r\n\t    <script>console.log(a)</script>\r\n\t  </head>\r\n\t  <body>\r\n\t    <h1>my title</h1>\r\n\t    <p>Welcome to my title, absolutely beautiful</p>\r\n\t    <script>console.log(b)</script>\r\n\t  </body>\r\n\t</html>\r\n\r\n\r\n*getter*\r\n\r\n**theme.change(themeName)**\r\n\r\nchange your theme directly in your router. \r\n\r\n\ttheme.change('v2')\r\n\r\n**theme.getName()**\r\n\r\nget your theme name\r\n\r\n\ttheme.getName()\r\n\r\n**theme.getInfo()**\r\n\r\nget info from package.json\r\n\r\n\ttheme.getInfo()\r\n\r\n*All methods are chainable except load*\r\n\r\n**theme.status(statusCode)**\r\n\r\ncustom status code for your res, example:\r\n\r\n\ttheme.status(404)\r\n\r\n**theme.title(pageTitle)**\r\n\r\nIt is your site title, and will render as ```<%= title %>```. for example:\r\n\ttheme.title(\"This is about page\")\r\n\r\n**theme.data(key, value)**\r\n\r\nAdd data to your views, key is string, and value is mixed type. for example: \r\n\r\n\ttheme.data('mydata', 'good')\r\n\t\t .data('age', 1)\r\n\t\t .data('appearance', ['black', 'white'])\r\n\r\nIn your views file you can print it directly as your key name. for example:\r\n\t\r\n\t<%= mydata %> has age: <%= age %>\r\n\r\n**theme.data(object)**\r\n\r\nSame as default data method, but use object rather than key value. for example:\r\n\r\n\ttheme.data({\r\n\t\tmydata: 'good',\r\n\t\tage: 1\r\n\t})\r\n\r\nIn your views files you can print it directly as your key name in object. example:\r\n\r\n\t<%= mydata %> has age: <%= age %>\r\n\r\n**theme.css(csslist, [options])**\r\n\r\nadd css to your page, ``` csslist ``` is string. for example:\r\n\r\n\ttheme.css('bootstrap, style, v2')\r\n\r\nIn your views:\r\n\r\n\t<%- stylesheet %>\r\n\r\nIt will print\r\n\r\n\t<link rel=\"stylesheet\" href=\"/v1/css/bootstrap.css\" />\r\n\t<link rel=\"stylesheet\" href=\"/v1/css/style.css\" />\r\n\t<link rel=\"stylesheet\" href=\"/v1/css/v2.css\" />\r\n\r\nOptions are optional, contains:\r\n\r\n- media\r\n- alternate\r\n- query\r\n\r\nfor example: \r\n\t\r\n\ttheme.css('for_print', { media: 'print'})\r\n\t\t .css('a, b', {alternate: true})\r\n\t\t .css('c', {q: {v: '2'}})\r\n\r\nit will print:\r\n\r\n\t<link rel=\"stylesheet\" media=\"print\" href=\"/v1/css/for_print.css\" />\r\n\t<link rel=\"alternate stylesheet\" href=\"/v1/css/a.css\" />\r\n\t<link rel=\"alternate stylesheet\" href=\"/v1/css/b.css\" />\r\n\t<link rel=\"stylesheet\" href=\"/v1/css/c.css?v=2\" />\r\n\r\n**theme.css(css1, css2, css3, ..., cssn, options)**\r\n\r\nSame as above method, the different is it takes argument rather than string separated with commas\r\n\r\n*Note that: css1, css2, .. cssn can take url as input*\r\n\r\n\ttheme.css('http://dc8hdnsmzapvm.cloudfront.net/assets/styles/application.css', {q: {'87923645ca2ae626bb841ec75bddeb8c': ''}})\r\n\r\nresult\r\n\r\n\t<link rel=\"stylesheet\" href=\"http://dc8hdnsmzapvm.cloudfront.net/assets/styles/application.css?87923645ca2ae626bb841ec75bddeb8c\" />\r\n\r\n**theme.js(jslist, [options])**\r\n\r\nadd javascript to your page.\r\n\r\n\ttheme.js('jquery, bootstrap, underscore')\r\n\r\nIn your views:\r\n\r\n\t<%- javascript %>\r\n\r\nwill print\r\n\r\n\t<script href=\"/v1/js/jquery.js\"></script>\r\n\t<script href=\"/v1/js/bootstrap.js\"></script>\r\n\t<script href=\"/v1/js/underscore.js\"></script>\r\n\r\noptions is optional, only accept q\r\n\r\n\ttheme.js('baba,yaya,dede', {q: {v: 3}})\r\n\r\nresult:\r\n\r\n\t<script href=\"/v1/js/baba.js?v=3\"></script>\r\n\t<script href=\"/v1/js/yaya.js?v=3\"></script>\r\n\t<script href=\"/v1/js/dede.js?v=3\"></script>\r\n\r\njs list could be array\r\n\r\n\ttheme.js(['bootstrap', 'underscore'])\r\n\r\n\r\n**theme.js(external_js1, external_js2, ..., external_jsn, [options])**\r\n\r\nSame as above, but it takes url as parameter\r\n\r\n**theme.meta(name, content)**\r\n\r\nadd meta tags to your page\r\n\r\n\ttheme.meta('description', 'this is cool website')\r\n\t\t .meta('keywords', 'cool, javascript awesome, good')\r\n\r\nIn your views:\r\n\r\n\t<%- meta %>\r\n\r\nresult:\r\n\r\n\t<meta name=\"description\" content=\"this is cool website\" />\r\n\t<meta name=\"keywords\" content=\"cool, javascript awesome, good\" />\r\n\r\n**theme.meta(object)**\r\n\r\n\ttheme.meta({ name: 'keywords', content: 'my_keywords'})\r\n\t\t .meta({ http-equiv: 'refresh', content: '30'})\r\n\r\nresult\r\n\r\n\t<meta name=\"keywords\" content=\"my_keywords\" />\r\n\t<meta http-equiv=\"refresh\" content=\"30\" />\r\n\t\r\n**theme.robots([name], options)**\r\n\r\nas name is optional, if you don't describe which robots, it will take default name \"robots\". And when you set robots name, example 'googlebot' it will print as you wish\r\n\r\n\ttheme.robots({\r\n            \tindex: 1,\r\n            \tfollow: 0\r\n      \t\t})\r\n        \t.robots('googlebot', {\r\n            \tindex: 1,\r\n            \tnoodp: 1,            \r\n        \t})\r\n\r\nresult\r\n\r\n\t<meta name=\"robots\" content=\"index, nofollow\" />\r\n\t<meta name=\"googlebot\" content=\"index, follow, noodp\" />\r\n\r\ndefault options are:\r\n\r\n- index\r\n- follow\r\n- noodp\r\n- noarchive\r\n- etc. you can read more [https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag ](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag)\r\n\r\nwhen you set index with 1, it will print index, otherwise it will print noindex. same as follow, when you print follow:0 it will print nofollow, moreover will print follow\r\n\r\nfor more information about robots meta tags you can read it here: [http://www.robotstxt.org/meta.html](http://www.robotstxt.org/meta.html)\r\n\r\n**theme.headerScript(script)**\r\n\r\nadd script to your header, maybe analytics code or whatever do you want\r\n\r\n\ttheme.headerScript('<script>console.log(\"a\");</script>')\r\n\r\nIn your views:\r\n\r\n\t<%- headerScript %>\r\n\r\nresult:\r\n\r\n\t<script>console.log(\"a\");</script>\r\n\r\ntips. make sure that you put it in header tag\r\n\r\n\r\n**theme.footerScript()**\r\n\r\nadd script to your header\r\n\r\n\ttheme.footerScript('<script>console.log(\"this is footer\");</script>')\r\n\r\ntips. make sure that you put it in very bottom page\r\n\r\n## Social Media##\r\n\r\nThis is advance usage. If you don't know what you do, please read this two documentation:\r\n\r\n- [http://ogp.me/](http://ogp.me/)\r\n- [https://dev.twitter.com/docs/cards](https://dev.twitter.com/docs/cards)\r\n\r\nPlease note that social media meta tags is part of ```<%- meta -%>``` variable.\r\n\r\n### Facebook Opengraph ###\r\n\r\nfacebook opengraph is special meta tags for facebook. Make sure you define the namespace before go deeper:\r\n\r\n#### theme.opengraph('namespace', type)####\r\n\r\nthere are several types of namespace, you should choose one:\r\n\t\r\n1. music\r\n2. video\r\n3. article\r\n4. book\r\n5. profile\r\n6. website\r\n7. custom\r\n\r\nplace your namespace as attribute of html tag\r\n\r\n\t<html <%-og_namespace%>>\r\n\r\n**theme.opengraph('namespace', 'music')**\r\n\r\nresult: ```<html prefix=\"og: http://ogp.me/ns/music#\">```\r\n\r\n**theme.opengraph('namespace', 'video')**\r\n\r\nresult: ```<html prefix=\"og: http://ogp.me/ns/video#\">```\r\n\r\n**theme.opengraph('namespace', 'article')**\r\n\t\r\nresult: ```<html prefix=\"og: http://ogp.me/ns/article#\">```\r\n\r\n**theme.opengraph('namespace', 'book')**\r\n\r\nresult: ```<html prefix=\"og: http://ogp.me/ns/book#\">```\r\n\r\n**theme.opengraph('namespace', 'profile')**\r\n\r\nresult: ```<html prefix=\"og: http://ogp.me/ns/profile#\">```\r\n\r\n**theme.opengraph('namespace', 'website')**\r\n\r\nresult: ```<html prefix=\"og: http://ogp.me/ns/website#\">```\r\n\r\n**theme.opengraph('namespace', 'custom', {namespace: ns, url: yoursite})**\r\n\r\ncustom namespace should have namespace and url, for example:\r\n\r\n\ttheme.opengraph('namespace', 'custom', {\r\n\t\t\t \tnamespace: 'my_namespace', \r\n\t\t\t\turl: 'http://example.com'\r\n\t\t  })\r\n\r\nresult:\r\n\r\n\t<html prefix=\"my_namespace: http://example.com/ns#\">\r\n\r\n#### theme.opengraph(property, value)####\r\n\r\n\ttheme.opengraph('title', \"The Rock\")\r\n         .opengraph('type', 'video.movie')\r\n         .opengraph('url', 'http://www.imdb.com/title/tt0117500/')\r\n         .opengraph('image', \"http://ia.media-imdb.com/images/rock.jpg\", {\r\n            secure_url: 'https://secure.example.com/ogp.jpg',\r\n            type: 'image/jpeg',\r\n            width: '400',\r\n            height: '300'\r\n         })\r\n\r\nvalue can be as object, it will print:\r\n\r\n\t<meta property=\"og:title\" content=\"The Rock\" />\r\n\t<meta property=\"og:type\" content=\"video.movie\" />\r\n\t<meta property=\"og:url\" content=\"http://www.imdb.com/title/tt0117500/\" />\r\n\t<meta property=\"og:image\" content=\"http://ia.media-imdb.com/images/rock.jpg\" />\r\n\t<meta property=\"og:image:secure_url\" content=\"https://secure.example.com/ogp.jpg\" />\r\n\t<meta property=\"og:image:type\" content=\"image/jpeg\" />\r\n\t<meta property=\"og:image:width\" content=\"400\" />\r\n\t<meta property=\"og:image:height\" content=\"300\" />\r\n\r\nPlease read official documentation of facebook opengraph, and open issue when you find a bug.\r\n\r\n### Twitter Cards ###\r\n\r\nOfficial documentation at [https://dev.twitter.com/docs/cards](https://dev.twitter.com/docs/cards)\r\n\r\nExpress-theme only support these cards:\r\n\r\n- **Summary Card**: Default Card, including a title, description, thumbnail, and Twitter account attribution.\r\n- **Summary Card with Large Image**: Similar to a Summary Card, but offers the ability to prominently feature an image.\r\n- **Photo Card**: A Tweet sized photo Card.\r\n- **Gallery Card**: A Tweet Card geared toward highlighting a collection of photos.\r\n- **App Card**: A Tweet Card for providing a profile of an application.\r\n- **Player Card**: A Tweet sized video/audio/media player Card.\r\n- **Product Card**: A Tweet Card to better represent product content.\r\n\r\n*Please note that, you only can call this method once, if you call again then the last method will replace the previous*\r\n\r\n#### Summary cards ####\r\n\r\nthis code:\r\n\r\n\ttheme.twitter_cards('summary', {\r\n            site: '@nytimes',\r\n            creator: '@SarahMaslinNir',\r\n            title: 'Parade of Fans for Houston’s Funeral',\r\n            description: 'NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.',\r\n            image: 'http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-article.jpg'\r\n        })\r\n\r\nwill print this:\r\n\r\n\t<meta name=\"twitter:card\" content=\"summary\" />\r\n\t<meta name=\"twitter:site\" content=\"@nytimes\" />\r\n\t<meta name=\"twitter:creator\" content=\"@SarahMaslinNir\" />\r\n\t<meta name=\"twitter:title\" content=\"Parade of Fans for Houston’s Funeral\" />\r\n\t<meta name=\"twitter:description\" content=\"NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.\" />\r\n\t<meta name=\"twitter:image\" content=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-article.jpg\" />\r\n\r\n#### Summary Card with Large Image ####\r\n\r\n\ttheme.twitter_cards('summary_large_image', {\r\n            site: '@nytimes',\r\n            creator: '@SarahMaslinNir',\r\n            title: 'Parade of Fans for Houston’s Funeral',\r\n            description: 'NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.',\r\n            image_src: 'http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-article.jpg'\r\n        })\r\n\r\nresult:\r\n\r\n\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t<meta name=\"twitter:site\" content=\"@nytimes\" />\r\n\t<meta name=\"twitter:creator\" content=\"@SarahMaslinNir\" />\r\n\t<meta name=\"twitter:title\" content=\"Parade of Fans for Houston’s Funeral\" />\r\n\t<meta name=\"twitter:description\" content=\"NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.\" />\r\n\t<meta name=\"twitter:image:src\" content=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-article.jpg\" />\r\n\r\n#### Photo Card ####\r\n\r\n\ttheme.twitter_cards('photo', {\r\n            site: '@examplephotosite',\r\n            creator: '@sippey',\r\n            title: 'Parade of Fans for Houston’s Funeral',\r\n            image: {\r\n                content: 'http://example.com/photo/a/image.jpg',\r\n                height: 610,\r\n                width: 610\r\n            }\r\n        })\r\n\r\nresult: \r\n\r\n\t<meta name=\"twitter:card\" content=\"photo\">\r\n\t<meta name=\"twitter:site\" content=\"@examplephotosite\">\r\n\t<meta name=\"twitter:creator\" content=\"@sippey\">\r\n\t<meta name=\"twitter:title\" content=\"Good Morning, San Francisco\">\r\n\t<meta name=\"twitter:image\" content=\"http://example.com/photo/a/image.jpg\">\r\n\t<meta name=\"twitter:image:width\" content=\"610\">\r\n\t<meta name=\"twitter:image:height\" content=\"610\">\r\n\r\n### Gallery Card ###\r\n\r\n\t.twitter_cards('gallery', {\r\n            site: '@flickr',\r\n            creator: '@hackweek',\r\n            title: 'Hack week',\r\n            description: 'A look at Hack Week at Twitter HQ (@twoffice) and all of our offices around the world',\r\n            images: [\r\n                'http://farm9.staticflickr.com/8236/8383176221_44f50afaba_b.jpg',\r\n                'http://farm9.staticflickr.com/8186/8393798794_3a3d27a621_c.jpg',\r\n                'http://farm9.staticflickr.com/8189/8384260164_511782a797_c.jpg',\r\n                'http://farm9.staticflickr.com/8188/8383177259_f927f13d81_b.jpg'\r\n            ]\r\n        })\r\n\r\nresult :\r\n\r\n\t<meta name=\"twitter:card\" content=\"gallery\">\r\n\t<meta name=\"twitter:site\" content=\"@flickr\">\r\n\t<meta name=\"twitter:creator\" content=\"@hackweek\">\r\n\t<meta name=\"twitter:title\" content=\"Hack Week\">\r\n\t<meta name=\"twitter:description\" content=\"A look at Hack Week at Twitter HQ (@twoffice) and all of our offices around the world.\">\r\n\t<meta name=\"twitter:image0\" content=\"http://farm9.staticflickr.com/8236/8383176221_44f50afaba_b.jpg\">\r\n\t<meta name=\"twitter:image1\" content=\"http://farm9.staticflickr.com/8186/8393798794_3a3d27a621_c.jpg\">\r\n\t<meta name=\"twitter:image2\" content=\"http://farm9.staticflickr.com/8189/8384260164_511782a797_c.jpg\">\r\n\t<meta name=\"twitter:image3\" content=\"http://farm9.staticflickr.com/8188/8383177259_f927f13d81_b.jpg\">\r\n\r\n#### App Card ####\r\n\r\n\ttheme.twitter_cards('app', {\r\n            description: 'The perfect for grabbing a nearby taxi. Try it by downloading today.',\r\n            iphone: {\r\n                id: 306934135,\r\n                url: 'example://action/5149e249222f9e600a7540ef',\r\n            },\r\n            ipad: {\r\n                name: 'Example App',\r\n                url: 'example://action/5149e249222f9e600a7540ef'\r\n            },\r\n            googleplay: {\r\n                id: 'com.example.app',\r\n                url: 'http://example.com/action/5149e249222f9e600a7540ef'\r\n            }\r\n        })\r\n\r\nresult\r\n\r\n\t<meta name=\"twitter:card\" content=\"app\">\r\n\t<meta name=\"twitter:description\" content=\"The perfect for grabbing a nearby taxi. Try it by downloading today.\">\r\n\t<meta name=\"twitter:app:id:iphone\" content=\"306934135\">\r\n\t<meta name=\"twitter:app:url:iphone\" content=\"example://action/5149e249222f9e600a7540ef\">\r\n\t<meta name=\"twitter:app:name:ipad\" content=\"Example App\">\r\n\t<meta name=\"twitter:app:url:ipad\" content=\"example://action/5149e249222f9e600a7540ef\">\r\n\t<meta name=\"twitter:app:id:googleplay\" content=\"com.example.app\">\r\n\t<meta name=\"twitter:app:url:googleplay\" content=\"http://example.com/action/5149e249222f9e600a7540ef\">\r\n\r\n#### Player Card ####\r\n\r\n\ttheme.twitter_cards('player', {\r\n        site: '@examplevideosite',\r\n        title: 'Example Video',\r\n        description: 'This is a sample video from example.com',\r\n        image: \"https://example.com/keyframe/a.jpg\",\r\n        player: {\r\n            content: 'https://example.com/embed/a',\r\n            width: 435,\r\n            height: 251\r\n        }\r\n    })\r\n\r\nresult\r\n\r\n\t<meta name=\"twitter:card\" content=\"player\" />\r\n\t<meta name=\"twitter:title\" content=\"Example Video\" />\r\n\t<meta name=\"twitter:description\" content=\"This is a sample video from example.com\" />\r\n\t<meta name=\"twitter:player\" content=\"https://example.com/embed/a\" />\r\n\t<meta name=\"twitter:player:width\" content=\"435\" />\r\n\t<meta name=\"twitter:player:height\" content=\"251\" />\r\n\r\n#### Product Card ####\r\n\r\n\ttheme.twitter_cards('product', {\r\n            site: '@twitter',\r\n            creator: '@twitter',\r\n            title: 'Logo Mug',\r\n            description: 'The perfect pick-me-up. Enjoy your favorite blend with this coffee mug featuring the Twitter logo. Make every work day good to the last drop.',\r\n            image: \"https://twitter.siglercompanies.com/graphics/00000001/mug-new.jpg\",\r\n            data: {\r\n                Price: '$3',\r\n                Color: 'Black'\r\n            }\r\n        })\r\n\r\nresult\r\n\r\n\t<meta name=\"twitter:card\" content=\"product\">\r\n\t<meta name=\"twitter:site\" content=\"@twitter\">\r\n\t<meta name=\"twitter:creator\" content=\"@twitter\">\r\n\t<meta name=\"twitter:title\" content=\"Logo Mug\">\r\n\t<meta name=\"twitter:description\" content=\"The perfect pick-me-up. Enjoy your favorite blend with this coffee mug featuring the Twitter logo. Make every work day good to the last drop.\">\r\n\t<meta name=\"twitter:image\" content=\"https://twitter.siglercompanies.com/graphics/00000001/mug-new.jpg\">\r\n\t<meta name=\"twitter:data1\" content=\"$3\">\r\n\t<meta name=\"twitter:label1\" content=\"Price\">\r\n\t<meta name=\"twitter:data2\" content=\"Black\">\r\n\t<meta name=\"twitter:label2\" content=\"Color\">\r\n\r\n\r\n# 500 and 404 handler #\r\n\r\nIn your app configuration, you should have these, below ```app.use(app.router)```:\r\n\r\n\tapp.use(theme.error(routes.errorHandler)); // handle error\r\n\tapp.use(theme.notFound(routes.notFound));  // 404 not found\r\n\r\n\r\nYour router files (routes) must contains router for errorHandler, and notFound, the name of your route handler is up to you\r\n\r\n\texports.errorHandler (err, req, res) {\r\n\t\t// do something here, maybe load theme and load 404.ejs\r\n\t};\r\n\r\nfor 404 not found:\r\n\r\n\texports.notFound (req, res) {\r\n\t\t// do something here, maybe load theme and load 404.ejs\r\n\t};\r\n\r\n# License #\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Ribhararnus Pracutiar\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "express-theme@0.0.5",
  "dist": {
    "shasum": "c37075b38064c6efcdd429d3f06f19a06dc0d24c",
    "tarball": "http://registry.npmjs.org/express-theme/-/express-theme-0.0.5.tgz"
  },
  "_from": "express-theme@0.0.5",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "raitucarp",
    "email": "ribhararnus.pracutiar@gmail.com"
  },
  "maintainers": [
    {
      "name": "raitucarp",
      "email": "ribhararnus.pracutiar@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "c37075b38064c6efcdd429d3f06f19a06dc0d24c",
  "_resolved": "https://registry.npmjs.org/express-theme/-/express-theme-0.0.5.tgz"
}
